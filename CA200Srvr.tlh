//           GENERATED SOURCE FILE - DO NOT EDIT                  
//                                                                
// This source file was generated by the Borland C++ compiler     
// in response to a #import directive for the type library :      
// 		C                                                         
//                                                                
#pragma once                                                      
#pragma pack(push, 8)                                             
#include <comdef.h>                                               

namespace CA200SRVRLib {

// Forward references

struct __declspec(uuid("db87a8f6-faf3-433a-b7f3-31bb4d759361"))
  /*interface*/ ICa200;
struct __declspec(uuid("5415c7c6-d982-46ee-ba22-fb6dc1ad5de0"))
  /*interface*/ ICas;
struct __declspec(uuid("a930f0db-f79a-467a-8479-f8369b063b8d"))
  /*interface*/ ICa;
struct __declspec(uuid("b455efe8-1576-481c-bac6-a1c506bf4e81"))
  /*interface*/ IProbes;
struct __declspec(uuid("b2fdd51e-cba7-45ce-af0a-dd962e46b74f"))
  /*interface*/ IProbe;
struct __declspec(uuid("3ee4760c-b9f3-47b1-953f-f5a2f83ff688"))
  /*interface*/ IOutputProbes;
struct __declspec(uuid("20ea33bb-6914-465a-b98e-8dbd4e386cd0"))
  /*interface*/ IMemory;
struct __declspec(uuid("f7663750-5900-45eb-905f-78c5d5378481"))
  /*interface*/ _ICaEvents;
struct __declspec(uuid("5c542273-19d5-4c56-a12a-a58b1baad65e"))
  /*interface*/ IProbeInfo;
struct __declspec(uuid("3cbe6157-1d53-4cae-b4b0-33acc30e6421"))
  /*interface*/ ICaOption;
struct /* coclass */Ca200;
struct /* coclass */Cas;
struct /* coclass */Ca;
struct /* coclass */Memory;
struct /* coclass */Probes;
struct /* coclass */Probe;
struct /* coclass */OutputProbes;

//
// Smart pointer declarations
//

_COM_SMARTPTR_TYPEDEF( ICa200 , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( ICas , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( ICa , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IProbes , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IProbe , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IOutputProbes , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IMemory , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( _ICaEvents , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( IProbeInfo , __uuidof( IDispatch ) );
_COM_SMARTPTR_TYPEDEF( ICaOption , __uuidof( IDispatch ) );

//
// Type library items
//

struct __declspec(uuid("3cbe6157-1d53-4cae-b4b0-33acc30e6421"))
 ICaOption : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR Command(
    BSTR CommandVal );
};
struct __declspec(uuid("5c542273-19d5-4c56-a12a-a58b1baad65e"))
 IProbeInfo : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  BSTR GetTypeName( );
  long GetTypeNO( );
};
struct __declspec(uuid("f7663750-5900-45eb-905f-78c5d5378481"))
 _ICaEvents : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  HRESULT ExeCalZero( );
};
struct __declspec(uuid("20ea33bb-6914-465a-b98e-8dbd4e386cd0"))
 IMemory : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  long GetChannelNO( );
  HRESULT PutChannelNO(
    long rhs );
  BSTR GetChannelID( );
  HRESULT PutChannelID(
    BSTR rhs );
  HRESULT GetReferenceColor(
    BSTR ProbeIDVal,
    float* XVal,
    float* YVal,
    float* LvVal );
  HRESULT SetChannelID(
    BSTR ChannelIDVal );
  HRESULT GetMemoryStatus(
    long ProbeNOVal,
    long* CalProbeSNOVal,
    long* RefProbeSNOVal,
    long* CalModeVal );
  long CheckCalData(
    long ProbeNOVal,
    BSTR FileNameVal );
  HRESULT CopyToFile(
    long ProbeNOVal,
    BSTR FileNameVal );
  HRESULT CopyFromFile(
    long ProbeNOVal,
    BSTR FileNameVal );
};
struct __declspec(uuid("3ee4760c-b9f3-47b1-953f-f5a2f83ff688"))
 IOutputProbes : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  struct IProbe* GetItem(
    VARIANT ProbeIndexVal );
  long GetCount( );
  HRESULT Add(
    BSTR ProbeIDVal );
  struct IProbe* GetItemOfNumber(
    long ProbeNumberVal );
  HRESULT AddAll( );
  struct IOutputProbes* Clone( );
  HRESULT RemoveAll( );
};
struct __declspec(uuid("b2fdd51e-cba7-45ce-af0a-dd962e46b74f"))
 IProbe : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  float GetX( );
  float GetY( );
  float GetZ( );
  float GetFlckrJEITA( );
  long GetNumber( );
  BSTR GetID( );
  HRESULT PutID(
    BSTR rhs );
  BSTR GetSerialNO( );
  float GetLv( );
  float Getud( );
  float Getvd( );
  long GetT( );
  float GetdEUser( );
  float GetFlckrFMA( );
  float Getsy( );
  float Getsx( );
  float Getduv( );
  float GetusUser( );
  float GetvsUser( );
  float GetLsUser( );
  float GetLvfL( );
  float GetR( );
  float GetG( );
  float GetB( );
  long GetRD( );
  long GetRAD( );
  long GetRFMA( );
  long GetRJEITA( );
  float GetSpectrum(
    long Frequency );
};
struct __declspec(uuid("b455efe8-1576-481c-bac6-a1c506bf4e81"))
 IProbes : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  struct IProbe* GetItem(
    VARIANT IndexVal );
  long GetCount( );
  struct IProbe* GetItemOfNumber(
    long ProbeNumber );
  HRESULT SetProbeID(
    long ProbeNumberVal,
    BSTR ProbeIDVal );
};
struct __declspec(uuid("a930f0db-f79a-467a-8479-f8369b063b8d"))
 ICa : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  struct IProbes* GetProbes( );
  struct IOutputProbes* GetOutputProbes( );
  struct IMemory* GetMemory( );
  BSTR GetDisplayProbe( );
  HRESULT PutDisplayProbe(
    BSTR rhs );
  struct IProbe* GetSingleProbe( );
  float GetSyncMode( );
  HRESULT PutSyncMode(
    float rhs );
  long GetDisplayMode( );
  HRESULT PutDisplayMode(
    long rhs );
  long GetDisplayDigits( );
  HRESULT PutDisplayDigits(
    long rhs );
  long GetAveragingMode( );
  HRESULT PutAveragingMode(
    long rhs );
  long GetBrightnessUnit( );
  HRESULT PutBrightnessUnit(
    long rhs );
  BSTR GetCAType( );
  BSTR GetCAVersion( );
  long GetNumber( );
  BSTR GetPortID( );
  BSTR GetID( );
  HRESULT PutID(
    BSTR rhs );
  HRESULT CalZero( );
  HRESULT Measure(
    long newVal );
  HRESULT SetAnalyzerCalMode( );
  HRESULT Enter( );
  HRESULT SetAnalogRange(
    float Range1Val,
    float Range2Val );
  HRESULT SetPWROnStatus( );
  long GetCalStandard( );
  HRESULT PutCalStandard(
    long rhs );
  HRESULT ResetAnalyzerCalMode( );
  HRESULT SetLvxyCalMode( );
  HRESULT ResetLvxyCalMode( );
  HRESULT SetAnalyzerCalData(
    long ColorVal );
  HRESULT SetDisplayProbe(
    long ProbeNumberVal );
  HRESULT SetLvxyCalData(
    long ColorVal,
    float XVal,
    float YVal,
    float LvVal );
  HRESULT PutRemoteMode(
    long rhs );
  HRESULT SetFMAAnalogRange(
    float RangeVal );
  HRESULT GetAnalogRange(
    float* Range1Val,
    float* Range2Val );
  HRESULT GetFMAAnalogRange(
    float* RangeVal );
};
struct __declspec(uuid("5415c7c6-d982-46ee-ba22-fb6dc1ad5de0"))
 ICas : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  struct ICa* GetItem(
    VARIANT IndexVal );
  long GetCount( );
  HRESULT SendMsr( );
  HRESULT ReceiveMsr( );
  struct ICa* GetItemOfNumber(
    long CaNumberVal );
  HRESULT SetCaID(
    long CaNumberVal,
    BSTR CaIDVal );
};
struct __declspec(uuid("db87a8f6-faf3-433a-b7f3-31bb4d759361"))
 ICa200 : IDispatch
{
  //
  // Property Data : 
  //
  //
  // Wrapper Methods : 
  //
  struct ICas* GetCas( );
  HRESULT SetConfiguration(
    long CaNumberVal,
    BSTR ConnecStringVal,
    long PortVal,
    long BaudRateVal );
  HRESULT AutoConnect( );
  struct ICa* GetSingleCa( );
};

#include "CA200Srvr.tli"

} // namespace CA200SRVRLib
#pragma pack(pop)
